apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Basic Install
    categories: OpenShift Optional
    containerImage: ""
    createdAt: ""
    description: Machine Deletion Remediation operator for reprovisioning unhealthy
      nodes using the Machine API.
    repository: https://github.com/medik8s/machine-deletion-remediation
    support: Medik8s
  name: machine-deletion-remediation.v0.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: MachineDeletionRemediation is the Schema for the machinedeletionremediations
        API
      displayName: Machine Deletion Remediation
      kind: MachineDeletionRemediation
      name: machinedeletionremediations.machine-deletion-remediation.medik8s.io
      resources:
      - kind: MachineDeletionRemediation
        name: machinedeletionremediations
        version: v1alpha1
      statusDescriptors:
      - description: Consecutive number of errors upon deleting a Machine
        displayName: Error On Delete Count
        path: errorOnDeleteCount
      version: v1alpha1
    - description: MachineDeletionRemediationTemplate is the Schema for the machinedeletionremediationtemplates
        API
      displayName: Machine Deletion Remediation Template
      kind: MachineDeletionRemediationTemplate
      name: machinedeletionremediationtemplates.machine-deletion-remediation.medik8s.io
      resources:
      - kind: MachineDeletionRemediationTemplate
        name: machinedeletionremediationtemplates
        version: v1alpha1
      specDescriptors:
      - displayName: Template
        path: template
      version: v1alpha1
  description: |
    Machine Deletion Remediation (MDR) is a remediator designed to reprovision unhealthy
    nodes using the Machine API. MDR can be used together with NodeHealthCheck (NHC),
    which detects the unhealthy Node and creates the Custom Resource for MDR.

    # How it works
    MDR follows the annotation on the Node to the associated Machine object, confirms
    that it has an owning controller (e.g. MachineSetController), that will recreate the
    Machine once deleted, and then proceeds with deleting the Machine.

    # How to use MDR with NHC
    Since NHC comes with Self Node Remediation as the default remediation mechanism,
    it needs to be configured to use MDR with the following steps

    - Create the MDR Template CR
    - Modify NHC's `.spec.remediationTemplate` to use MDR as it's remediator

    see https://github.com/medik8s/machine-deletion-remediation#readme for configuration examples.
  displayName: Machine Deletion Remediation operator
  icon:
  - base64data: base64EncodedIcon
    mediatype: image/png
  install:
    spec:
      deployments: null
    strategy: ""
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - medik8s
  - machine
  - deletion
  - remediation
  - mdr
  links:
  - name: Machine Deletion Remediation
    url: https://medik8s.io
  - name: Source Code
    url: https://github.com/medik8s/machine-deletion-remediation
  maintainers:
  - email: medik8s@googlegroups.com
    name: Medik8s Team
  maturity: alpha
  minKubeVersion: 1.23.0
  provider:
    name: Medik8s
    url: https://github.com/medik8s
  version: 0.0.0
